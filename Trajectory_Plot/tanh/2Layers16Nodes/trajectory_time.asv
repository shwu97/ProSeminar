clear all; clc;

%%ReLu x_0 = [1,1,1]
W0 = [-2.4106e-01, -5.3735e-02,  5.2860e-01;
       2.1795e-01,  5.5519e-02, -4.9621e-01;
       2.5384e-01,  6.3035e-02, -4.6022e-01;
       -2.3453e-01, -8.4594e-02,  4.7095e-01;
       -2.1217e-01, -4.5595e-02,  2.5012e-01;
        2.1317e-01,  6.3031e-02, -4.2287e-01;
       -2.4952e-01, -7.7818e-02,  4.3606e-01;
        2.4915e-01,  7.7506e-02, -4.6179e-01;
       -2.0781e-01, -6.4169e-02,  5.1127e-01;
       -2.2602e-02,  3.9037e-02, -2.0982e-02;
       -2.3102e-01, -4.7993e-02,  4.9868e-01;
       -2.6535e-01, -7.3000e-02,  4.2131e-01;
        2.5974e-01,  6.2375e-02, -4.2259e-01;
        2.5629e-01,  5.1012e-02, -4.7745e-01;
       -9.0383e-03,  8.5751e-03,  4.4216e-03;
       -1.0975e-02,  1.6886e-02, -3.6705e-04];
	 
W1 = [-6.9362e-01, -1.0488e-01,  5.3601e-01, -5.3821e-01, -1.0818e-01, 4.5358e-01, -6.5436e-02, -2.0012e-02,  9.1634e-02,  2.1117e-02, -7.1161e-01, -6.4715e-01,  3.1149e-01, -2.9040e-02,  6.5314e-02, 9.0947e-03;
      -3.1223e-01,  4.2131e-01,  1.7730e-01,  9.8654e-02, -4.1339e-01, 4.9263e-01, -2.2933e-01,  3.0466e-01, -6.6141e-01,  1.1134e-01, -1.3944e-02, -5.3809e-02,  2.5411e-01,  4.9157e-01,  1.8396e-02, 6.3061e-02;
      -1.0654e+00, -3.1647e-01,  5.1523e-01, -5.4066e-01, -1.6933e-01, 6.4587e-01,  3.6384e-01, -6.0004e-01,  4.3299e-01, -9.4373e-02, -2.9778e-01, -6.6477e-01, -1.8576e-01, -3.3083e-01, -2.0932e-02, 1.9608e-01;
      -1.0010e+00,  2.1414e-04,  5.5670e-01, -4.4397e-01, -5.5874e-01, 6.3558e-01,  4.8654e-01, -4.9316e-01,  3.1819e-01, -1.7516e-01, -6.6087e-01, -3.3444e-01, -2.3693e-01,  8.7031e-02, -1.0403e-01, -1.0208e-01;
       4.4834e-01,  8.6698e-01, -5.4979e-01,  3.7077e-01,  3.0997e-01, -6.6395e-02, -4.5451e-01,  6.3527e-01, -3.8624e-01, -2.0970e-01, 3.0481e-01,  3.9410e-01,  8.7047e-01,  7.9431e-01,  1.8167e-01, 4.7804e-02;
       7.7211e-03, -4.4636e-01, -1.5820e-01,  4.4263e-01,  9.5512e-03, -3.1447e-01,  4.2003e-01, -2.0153e-01,  3.9898e-01,  4.2771e-02, 5.5142e-01,  2.4857e-01, -4.1815e-01, -5.6302e-01,  5.7959e-02, 5.4897e-02;
      -1.2970e+00, -5.4951e-01,  1.0159e+00, -9.9374e-01, -3.0025e-01, 4.5660e-01,  6.1644e-01, -5.0117e-01,  3.9306e-01,  1.4003e-02, -3.9519e-01, -1.0463e+00, -6.2722e-01, -6.2676e-01,  1.2946e-01, 4.0694e-02;
       7.1909e-01, -4.0844e-01, -4.9447e-01,  4.6481e-01,  2.0426e-01, -5.9971e-01,  1.1847e-01, -1.1610e-01,  6.9432e-01, -7.0376e-02, 5.2487e-01,  5.1886e-01, -4.8060e-01, -5.4517e-01,  4.7823e-02, -5.2262e-02;
       2.3630e-01,  5.2540e-01, -5.9073e-01,  4.6407e-01, -7.8997e-02, -4.3414e-01, -8.1336e-01,  6.5032e-01, -6.5060e-01,  6.6409e-02, 4.9300e-01,  2.6594e-01,  7.5382e-01,  1.0485e+00, -1.3162e-01, -5.4956e-02;
       -5.4893e-01, -6.6610e-01,  4.0644e-01, -1.7891e-01,  1.9968e-01, -2.0385e-01,  4.4735e-01, -4.6514e-01,  7.7267e-01,  1.1241e-01,  -2.3101e-01, -7.2684e-02, -6.3515e-01, -9.0037e-01,  1.8693e-02, -6.5866e-03;
       5.8475e-01, -4.2095e-02, -3.8197e-01,  4.7065e-01,  3.9042e-01, -6.1002e-01,  1.4698e-01,  2.2313e-02,  1.6156e-01,  3.3429e-02, 7.5851e-01,  4.3255e-01, -1.8642e-01, -2.7150e-01,  1.4959e-02, -5.1772e-02;
       4.3990e-01,  7.1686e-01, -4.8110e-01,  5.6821e-01, -1.0843e-01, -7.5918e-02, -4.7069e-01,  3.5975e-01, -8.9667e-01,  1.0491e-01, 4.5982e-01,  1.3570e-01,  7.0432e-01,  1.0823e+00, -4.0051e-02, 1.1061e-02;
       9.8379e-01,  4.1571e-01, -4.0014e-01,  5.0531e-01,  1.8058e-01, -7.8911e-01, -5.3223e-01,  4.5184e-01, -1.6880e-01, -2.3428e-01, 6.7390e-01,  6.7189e-01,  1.3336e-01,  4.5107e-01, -1.6937e-01, 1.2971e-01;
       -5.6981e-01,  4.7590e-01,  3.0692e-01, -4.0443e-01, -1.9316e-01, 5.5952e-01, -4.9968e-01,  4.5016e-01, -5.5315e-01,  2.0358e-02, -8.6876e-01, -4.4564e-01,  4.3838e-01,  5.2891e-01,  4.9559e-02, 5.6279e-02;
       -1.4243e-01, -5.9203e-01,  1.5724e-01, -1.6103e-01,  3.0865e-01, -2.3200e-01,  4.1788e-01, -4.6630e-01,  4.8830e-01,  5.5654e-05, 9.5276e-02,  2.1883e-01, -4.6644e-01, -7.2521e-01, -4.1464e-02, 5.3551e-02;
       -9.0193e-01, -5.3004e-01,  4.2850e-01, -9.0526e-01,  1.5800e-02, 5.3810e-01,  4.6121e-01, -7.5443e-01,  4.7172e-01,  1.3777e-02, -4.6054e-01, -6.8285e-01, -1.7260e-01, -5.6126e-01, -1.9493e-01, -6.2778e-03];

W2 = [ 0.3054, -0.2967, -0.0083, -0.3318,  0.0769,  0.3110,  0.3520, -0.0274, -0.3981, -0.0309, -0.3782, -0.0046, -0.0256, -0.0060,  0.2932,  0.2642];



b0 = [-1.3186e+00, -1.2190e+00,  1.2723e+00, -1.2863e+00, -1.3561e-01, 6.2408e-01,  1.2770e+00, -1.4338e+00,  1.0803e+00, -1.3261e-03, -8.1410e-01, -1.1110e+00, -1.1037e+00, -1.2659e+00, -4.4647e-03, -1.3700e-02];
	 
b1 = [ 0.4552, -0.3835,  0.6566,  0.4868, -0.8964,  0.2268,  0.8739, -0.0841, -0.8542,  0.5627, -0.0686, -0.6586, -0.6107, -0.3017,  0.4542,  0.6440];

b2 = 0.0848;

%%Simulation based on initial Points
beg0 = -3;
end0 = 3;
steps = 1.5;
lim = 4;


%figure(2) is for comparision of the learning results
%discretization steps
T=1; 
%check the discrete-time model vs. continious time model
time=[0:T:9];
figure(2)
xlim([-lim lim]);
ylim([-lim lim]);
zlim([-lim lim]);
xlabel('x1')
ylabel('x2')
zlabel('x3')
grid on
hold on

% Test a random point whether it strives to the equilibrium point
%Reference of initial point in the three data
%initial_1.csv = [2,23, -2.73, 1.56];
%initial_2.csv = [-1.24, -0.89, 2.88];
%initial_3.csv = [-3, -3, 3]
z10 = [-3];
z20 = [-3];
z30 = [3];
Data = readmatrix("initial_3.csv");
initialState=[z10;z20;z30];
% generate continious-time response
[ts,ys] = ode45(@(t, z) controlloop(t, z, W0, W1, W2, b0, b1, b2), time, initialState);
figure(1)
subplot(3,1,1) 
plot(time,ys(:,1),"Color",'r')
hold on
plot(time,Data(1,:),"Color",'b')
legend('NN','MPC');
title('The trajectory of the 1^{st} state from -3')
subplot(3,1,2)
plot(time,ys(:,2),"Color",'r')
hold on
plot(time,Data(2,:),"Color",'b')
legend('NN','MPC');
title('The trajectory of the 2^{nd} state from -3')
subplot(3,1,3)
plot(time,ys(:,3),"Color",'r')
hold on
plot(time,Data(3,:),"Color",'b')
legend('NN','MPC');
title('The trajectory of the 3^{rd} state from 3')
